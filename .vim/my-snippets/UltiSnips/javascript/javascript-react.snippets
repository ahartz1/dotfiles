global !p
def set_component_name(snip):
    if snip.basename != 'index':
        snip.rv = snip.basename[:1].upper() + snip.basename[1:]
    else:
        path_parts = path.split('/')
        if len(path_parts) >= 2:
            snip.rv = path_parts[-2][:1].upper() + path_parts[-2][1:]
        else:
            snip.rv = 'Component'
endglobal

snippet rcc "Create React class" b
import React from 'react';

class ${1:`!p set_component_name(snip)`} extends React.Component {
	render() {
		return (
			${2:<div>$1</div>}
		);
	}
}

export default $1;
endsnippet

snippet rfc "Create React functional component" b
import React from 'react';

const ${1:`!p set_component_name(snip)`} = () => {
	return (
		${2:<div>$1</div>}
	);
};

export default $1;
endsnippet

snippet ustate "Add a useState statement" b
const [${1:xxx}, set${1/.+/\u$0/}] = useState($2);
console.error($1);
set${1/.+/\u$0/}($2);
endsnippet

global !p
def category_expand_react(snip):
    snip.buffer[snip.line + 1] = snip.buffer[snip.line + 1][:80]
    snip.buffer[snip.line + 3] = snip.buffer[snip.line + 3][:75] + ' */'

def category_jump(snip):
    if snip.tabstop == 2:
        snip.buffer[snip.line] = snip.buffer[snip.line].upper()[:79]
        snip.cursor.preserve()
endglobal

post_expand "category_expand_react(snip)"
post_jump "category_jump(snip)"
snippet //* "Add a /*-based category block" b
/* /////////////////////////////////////////////////////////////////////////////
// ${1:PUBLIC FUNCTIONS} ${2:`!p snip.rv = (79 - len(t[1]) - 4) * '/'`}
/////////////////////////////////////////////////////////////////////////// */
endsnippet

# vim:ft=snippets:
