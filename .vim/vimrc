set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" NERDTree plugin
Plugin 'scrooloose/nerdTree'

" NERD Commenter
Plugin 'scrooloose/nerdcommenter'

" Solarized color scheme
Plugin 'altercation/solarized', {'rtp': 'vim-colors-solarized/'}

" Solarized color scheme for Airline
Plugin 'vim-airline/vim-airline-themes'

" python-mode plugin
Plugin 'klen/python-mode'

" Airline (alternate vim-only version of now depricated vim-powerline)
Plugin 'vim-airline/vim-airline'

" Git plugin to allow branch info to show
Plugin 'tpope/vim-fugitive'

" Git plugin to indicate lines with changes
Plugin 'airblade/vim-gitgutter'

" vim-obsession to make Session.vim better
Plugin 'tpope/vim-obsession'

" vim-surround to work with HTML, XML, etc.
Plugin 'tpope/vim-surround'

" vim-unimpaired to quickly toggle and navigate
Plugin 'tpope/vim-unimpaired'

" syntastic linter
Plugin 'scrooloose/syntastic'

" CtrlP Fuzzy Finder
Plugin 'ctrlpvim/ctrlp.vim'

" ack.vim
" Note that this requires ack (`brew install ack`)
Plugin 'mileszs/ack.vim'

" phpcomplete for improved omni-completion in PHP. Use <C-x><C-o>
Plugin 'shawncplus/phpcomplete.vim'

" Vim Mustache
Plugin 'mustache/vim-mustache-handlebars'

" Twig.vim
Plugin 'nelsyeung/twig.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" " plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" " Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" " git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" " The sparkup vim script is in a subdirectory of this repo called vim.
" " Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" " Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}
"
" All of your Plugins must be added before the following line
call vundle#end()            " required
" filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal

" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" General Vim Settings --------------------------------------------------------
"
set t_Co=256

" Match background to my shell color
let gitc=$GITC
if gitc == 'tput setaf 0'
	set background=light
else
	set background=dark
endif

colorscheme solarized
" let python_highlight_all=1
syntax on

" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
if exists("&undodir")
	set undodir=~/.vim/undo
endif

" Make default clipboard the OS X clipboard
set clipboard=unnamed

" Enable the mouse
set mouse=a

" Enable line numbers
set number

" Always show status line
set laststatus=2

" Disable error bells
set noerrorbells

" Show the cursor position
set ruler

" Highlight the cursor line by default
set cursorline

" Allow deletion of existing characters in insert mode
set backspace=2

" Show the filename in the window titlebar
set title

" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Use highlighting for search matches (:nohlsearch to clear [or :noh])
set hlsearch

" Show tabs as '▸' followed by spaces
" set listchars=tab:▸\ ,eol:¬
set listchars=tab:▸\ ,trail:-

" Set tabstop to 4 spaces
set tabstop=4

" Set tab width to 4 spaces
" set shiftwidth=4

" Expand tabs into spaces
" set expandtab

" Set minimum window width to 88 (a.k.a. 'wiw')
set winwidth=88

filetype plugin indent on

" Set the default actual tab key to 4 spaces
set softtabstop=4

" Start file with open folds
set nofoldenable

" Make omnicompletion better by selecting highlighted with Enter
set completeopt=longest,menuone
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"


" File-Specific Settings ------------------------------------------------------
"
" To force hard tabs, set noexpandtab and don't set softtabstop
"   tabstop and shiftwidth should be set to the same value
" To force spaces instead of tabs, set expandtab and softtabstop
"   shiftwidth and softtabstop should be set to the same value
autocmd FileType html       setlocal noexpandtab tabstop=2 shiftwidth=2
autocmd FileType htmldjango setlocal noexpandtab           shiftwidth=2
autocmd FileType javascript setlocal noexpandtab tabstop=4 shiftwidth=4 softtabstop=0
autocmd FileType json       setlocal noexpandtab tabstop=2 shiftwidth=2
autocmd FileType php        setlocal noexpandtab tabstop=4 shiftwidth=4
autocmd FileType python     setlocal expandtab   tabstop=8 shiftwidth=4 softtabstop=4


" Key Mappings ----------------------------------------------------------------
"
" Change <Leader> to ',' (comma)
let mapleader=","

" Remap save
nmap <Leader>s :w<CR>

" Remap load
nmap <Leader>e :e!<CR>

" Toggle display of hidden characters
nmap <Leader>l :set list!<CR>

" Make 'Y' copy from current location to end of line
map Y y$

" Toggle paste mode (retains incomming formatting)
map <silent> <F2> :set paste!<CR>

" Make moving between windows easier
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" * will search word under cursor, but won't immediately jump to first match
nnoremap * *``
nnoremap * :keepjumps normal! mi*`i<CR>

" Turn off highlighting
nnoremap <silent> <leader>n :noh<CR>

" Search in PHP files
command -nargs=+ Pgrep grep -rn --include={*.php,} <args>

" Search in all files
command -nargs=+ Agrep grep -rn <args>


" Gvim Settings ---------------------------------------------------------------
"
" Prevent blinking cursor
set guicursor+=a:blinkon0

" Make cursor shape an underline
set guicursor+=a:hor10

" Hide scrollbars
set guioptions-=r
set guioptions-=L


" Ack Settings ----------------------------------------------------------------
"
" Also see The_Silver_Searcher settings
" Start an Ack search
nnoremap <leader>a :Ack<Space>

" Start an Ack search in a new tab
nnoremap <leader>A :tabe<CR>:Ack<Space>


" Airline Settings ------------------------------------------------------------
"
let g:airline_powerline_fonts = 1
let g:airline_theme = 'solarized'
let g:airline#extensions#whitespace#enabled = 0

" to use fancy symbols for airline, uncomment the following lines and use a
" patched font (more info on the README.rst)
if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_symbols.branch = '⭠'
let g:airline_symbols.readonly = '⭤'
let g:airline_symbols.linenr = '⭡'


" CtrlP Settings --------------------------------------------------------------
"
" Also see The_Silver_Searcher settings
" Note: Refresh cache with <F5>
let g:ctrlp_by_filename = 1
let g:ctrlp_regexp = 1
let g:ctrlp_extensions = ['autoignore']
" let g:ctrl_show_hidden = 1
nnoremap <silent> <leader>b :CtrlPBuffer<CR>
nnoremap <silent> <leader>t :CtrlP<CR>
nnoremap <silent> <leader>T :CtrlPTag<CR>


" Fugitive Settings -----------------------------------------------------------
"
autocmd BufReadPost fugitive://* set bufhidden=delete


" NERDTree Settings -----------------------------------------------------------
"
" toggle NERDTree display
nnoremap <silent> <leader>d :NERDTreeToggle<CR>
" open NERDTree with the current file selected
nnoremap <silent> <leader>f :NERDTreeFind<CR>

" don't show these file types
let NERDTreeIgnore = ['\.pyc$', '\.pyo$']
let g:NERDTreeWinSize = 40
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'


" PyMode Settings -------------------------------------------------------------
"
" Ignore lines that are too long
let g:pymode_lint_ignore = 'E501'


" Syntastic Settings ----------------------------------------------------------
"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_mode_map = {
	\ 'mode': 'active',
	\ 'passive_filetypes': ['python', 'html']}
let g:syntastic_html_tidy_ignore_errors = [
	\  '<html> attribute "lang" lacks value',
	\  '<a> attribute "href" lacks value',
	\  'trimming empty <span>',
	\  'trimming empty <h1>',
	\  '<div> attribute "{{^" lacks value',
	\  '<div> attribute "}}" lacks value',
	\  '<div> attribute "{{/" lacks value',
	\ ]


" The_Silver_Searcher Settings -----------------------------------------------
"
" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
	" Use Ag over Grep
	set grepprg=ag\ --nogroup\ --nocolor

	" Use Ag over Ack
	let g:ackprg = 'ag --vimgrep'

	" Use ag in CtrlP for listing files. Lightning fast and respects
	" .gitignore
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

	" ag is fast enough that CtrlP doesn't need to cache
	let g:ctrlp_use_caching = 0
endif


" Vim Mustache Settings -------------------------------------------------------
"
let g:mustache_abbreviations = 1

